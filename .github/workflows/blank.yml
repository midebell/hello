# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Load release-candidate vars
        uses: thgbrb/setup-environment@v1
        with:
          # Name of env file
          environment-config-file: .github/variables/vars.env
      - name: Run a multi-line script
        run: |
          echo "$DATABASE_NAME"
          echo ${{ env.DATABASE_NAME }}
          echo ${{ vars.DATABASE_NAME }}
          echo ${DATABASE_NAME}
        env:
            DATABASE_NAME: ${{ vars.DATABASE_NAME }}
        shell: bash
# In this example, all key from default section and
# grouped into section named API_LOREM_IPSUM will be loaded to environment variables.
  # qa:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v4
      # # - uses: university-of-york/ds-devtool-setEnvVars@v3
      # #   with:
      # #       envFile: 'staging.env'

      # - name: Set Environment Variables
      #   uses: tw3lveparsecs/github-actions-set-variables@latest
      #   with:
      #     envFilePath: .github/variables/vars.env
      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo "$DATABASE_NAME"
      #     echo ${{ env.DATABASE_NAME }}
      #     echo ${{ vars.DATABASE_NAME }}
      #     echo ${DATABASE_NAME}
      #   env:
      #       DATABASE_NAME: ${{ vars.DATABASE_NAME }}
      #   shell: bash

